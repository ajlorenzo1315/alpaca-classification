{
    "TÃ­tulo": "Fortran Parallel Programming Systems",
    "Cuerpo": "On This Page... Project Overview Fortran D Language & Compilers High Performance Fortran (HPF) Irregular Problems The D System Related Projects People Project Home Pages ADIFOR The D System ParaScope Related Links Rice University home page Rice Compiler Group home page Rice Computer Science home page Center for Research on Parallel Computation (CRPC) home page Project Overview The Fortran Tools effort seeks to make parallel computer systems usable for Fortran programmers. To achieve this goal, researchers are developing a coordinated programming system that includes compilers and tools for Fortran D, an extended dialect of Fortran that supports machine-independent data-parallel programming. Research efforts also include validation of the compilers and tools on realistic applications, as well as investigations of new functionality to handle irregular computations, parallel I/O, and automatic differentiation using the program analysis infrastructure developed for the project. Fortran D Language and Compilers Existing languages for parallel programming on scalable parallel systems are primitive and hard to use. This situation is the principal impediment to widespread use of scalable parallel systems for science and engineering problems. In addition, Fortran D makes programming easier than it is with explicit message-passing, because programmers can write codes that use a shared name space, independent of the target architecture. Using sophisticated compiler techniques, these \"high-level\" programs can be compiled for both SIMD and MIMD parallel architectures. Compilers for other machines, such as the SIMD MasPar MP-2, are under development. High Performance Fortran (HPF) Fortran D was a major impetus behind the definition of High Performance Fortran (HPF). The High Performance Fortran Forum, which produced the definition of HPF, includes representatives from industry, academia, and government laboratories. The Fortran D compilers produced in part by the Rice Compiler Group are being used as models for several commercial HPF compilers. Key aspects of the research associated with irregular scientific problems focuses on the development of portable runtime support libraries which (1) coordinate interprocessor data movement, (2) manage the storage of, and access to, copies of off-processor data, (3) support a shared name space, and (4) couple runtime data and workload partitioners to compilers. These runtime support libraries are being used to port application codes to a variety of multiprocessor architectures and are being incorporated into the Fortran D distributed-memory compilers. The D System In 1992, researchers at Rice University set out under ARPA funding to build a suite of prototype tools that support development of programs in Fortran D, an abstract, machine-independent parallel programming language. To date, research has focused on four key areas: an intelligent editor for Fortran D that provides feedback on the analysis and parallelization performed by a Fortran D compiler developed at Rice; advances in automatic data distribution research performed at Rice; joint work on performance analysis of Fortran D programs with collaborators at the University of Illinois; and overhaul and integration of a program analysis repository with the interprocedural analysis system to provide a firm basis for the development of efficient whole-program analysis tools. ( D System home page ) The D System grew out of a collection of tools called ParaScope, which was initially designed to support development of Fortran programs with explicit parallelism in the form of parallel loops. One difference between ParaScope and the D System is that ParaScope focuses on shared memory machines, whereas the D System is targeted to distributed shared memory (DSM) machines. For instance, researchers at Rice University and Argonne National Laboratory are continuing to enhance ADIFOR, an automatic differentiation tool for Fortran built upon the ParaScope infrastructure, to support sensitivity analysis of large simulation codes for use in multidisciplinary design optimization by members of the CRPC Parallel Optimization group. The Fortran project researchers will develop and implement extensions to Fortran D that support \"out-of-core\" arrays, which are too large to fit into the main memory of even a massively parallel computer system. People Present members of the Fortran Tools effort include Vikram Adve , Alan Carle , Keith Cooper , Ken Kennedy , Charles Koelbel , John Mellor-Crummey , Linda Torczon , and Scott Warren .",
    "ground_truth": "unknown"
}
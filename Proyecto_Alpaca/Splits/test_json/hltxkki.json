{
    "TÃ­tulo": " Lecture notes - Chapter 10 - Assembly",
    "Cuerpo": "When it gets one that is meant for it to execute, it executes it. Just as there are registers meant for integers, there are registers meant for floating pt. pt registers, since double precision numbers are 64 bits long. number is to be stored, it is always placed in the least significant word of a pair of registers. values in registers, there are only really 16. . You must use the number corresponding to which of the 32 registers it is, but only use even numbered ones. mtc1  rt, fs Move contents of R2000 register rt into fl. mfc1  rt, fs Move contents fl. These operations convert and move data within the fl. an assembler is a program -- a very deterministic program -- it translates each instruction to its machine code. These are instructions that can be directly turned into machine code. look in appendix C.  If the instruction is there, then it is a TAL instruction. The assembler takes (non MIPS) MAL instructions and synthesizes them with 1 or more MIPS instructions. Each is a 32 bit register. a modern assembler will -- on the fly, translate (synthesize) from the accepted assembly language to the instructions available in the architecture (those instructions that rely on an address for their machine code). the starting addresses are fixed -- ANY program will be assembled to have data and instructions that start at the same address. opcode is 6 bits -- it is defined to be 001000 so, the 32-bit instruction for addi $8, $20, 15  is 001000 10100 01000 0000000000001111 at assembly time, to get the target field: take 32 bit target address, eliminate least significant 2 bits (word address!)",
    "ground_truth": "unknown"
}
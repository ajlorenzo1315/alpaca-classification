{
    "TÃ­tulo": "SHORE Project Home Page",
    "Cuerpo": "Date: Thu, 07 Nov 1996 19:22:32 GMT Server: NCSA/1.5 Content-type: text/html Last-modified: Tue, 06 Aug 1996 17:27:39 GMT Content-length: 13119 SHORE Project Home Page SHORE - A High-Performance, Scalable, Persistent Object Repository Document Contents: Objective Overview Release Information Mailing Lists See Also: Shore, version 1.0 On-line Information Source, Binaries and Documentation The Beta-release of Shore (version 0.9.3) Publications related to Shore People working on Shore Latest Research Summary for ARPA Paradise Project: a GIS built on SHORE EXODUS Project: the predecessor to Shore OO7 Benchmark: a benchmark for OODBs Shore Photo Album UW-Madison, Database Research Group UW-Madison, CS Department Server Objective: The objective of the SHORE project is to design, implement, and evaluate a persistent object system that will serve the needs of a wide variety of target applications including hardware and software CAD systems, persistent programming languages, geographic information systems, satellite data repositories, and multi-media applications. This interface is intended to ease the transition of applications from the Unix file system environment to Shore as existing Unix tools such as vi and cc will be able to store their data in Shore objects without modification (basically a Unix file becomes either a single Shore object or the text field of a more complex object). While the ODMG effort has also concentrated on providing some degree of support for language heterogeneity (which, in turn, facilitates hardware heterogeneity), SHORE remains distinguished by its focus on scalability and support for applications that depend on the Unix file system for persistent storage. While a client-server architecture is fine for a design environment such as is typically used in software and hardware CAD efforts, it is not scalable. By structuring the software that runs in the server with extensibility in mind, it is relatively simple for users to build application-specific servers. For example, the Paradise project is already using the SHORE server to build a geographic information system for NASA's EOSDIS project. We feel that these two unique pieces of technology will play a important role in a variety of future research and commercial endeavors. Language and Hardware Heterogeneity Objects in SHORE are typed. SHORE provides a single, language-neutral type system that is used to define the types of all SHORE objects. This type system is embodied in the SHORE Data Language (SDL), which is the language in which SHORE object types are defined. Support for Existing, File-based Applications A major goal of SHORE is to enable applications that currently use untyped, byte-oriented files for their persistent data, flattening and un-flattening their data each time it is accessed, to stop doing so. Such applications should be able to store their data as typed, structured objects for more convenient, type-safe, intra- and inter-program data sharing. First, to support object naming and space management in a world with many persistent objects, SHORE provides a flexible, tree-structured, Unix-like name-space in which all persistent objects are reachable, either directly or indirectly. Programs that attempt to read an object through SHORE counterparts of the Unix file system calls will only see this portion of the object. For legacy programs that wish to do so without being re-linked, it is possible to NFS-mount a SHORE file system and access the Unix data contained in its objects directly. Release Information: Below is the latest time table for the release of SHORE. You cannot subscribe to this mailing list. shore_all@cs.wisc.edu This is a mailing list for users of (and those interested in) SHORE. This list is an public mailing list. Subscribing to shore_all To subscribe or to change your subscription, you must mail a special message to: listproc@cs.wisc.edu .",
    "ground_truth": "project"
}
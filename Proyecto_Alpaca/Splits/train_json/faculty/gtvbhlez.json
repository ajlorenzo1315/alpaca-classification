{
    "TÃ­tulo": " Pei Cao' Home Page ",
    "Cuerpo": "Date: Thu, 07 Nov 1996 19:06:53 GMT Server: NCSA/1.5 Content-type: text/html Last-modified: Thu, 12 Sep 1996 20:50:25 GMT Content-length: 5521 Pei Cao' Home Page Pei Cao ( cao@cs.wisc.edu) Assistant Professor of Computer Science Department of Computer Sciences University of Wisconsin - Madison 1210 West Dayton Street Madison, WI 53706  USA cao@cs.wisc.edu Phone: 608-262-2252 Departmental Office: 262-1204 Fax:  608-262-9777 Education Research Interests Courses Recent Papers Recent Talks Summary My Collection of Links Education: Ph.D. Princeton University, 1996. Princeton University, 1992. Research Interests: Operating systems, high performance file systems, memory resource allocation; High performance I/O systems for parallel computers; Research Projects: Optimal Parallel Prefetching and Caching ACFS: Application Controlled File Caching and Prefetching Courses: CS739: Research Topics in Distributed Systems and Operating Systems (Fall 1996) CS736: Advanced Operating System (Spring 1996) Traces and Simulators: File Access Traces Recent Papers Integrated Parallel Prefetching and Caching Tracy Kimbrel, Pei Cao, Anna Karlin, Ed Felten, and Kai Li, Princeton CS Department Tech Report TR-502-95, November 1995. A shorter version is in the Proceedings of 1996 SIGMETRICS Conference. Application Controlled File Caching and Prefetching (PhD thesis) Also Princeton CS Department Tech Report TR-522-96. Implementation and Performance of Integrated Application-Controlled Caching, Pre fetching and Disk Scheduling Pei Cao, Edward W. Felten, Anna Karlin and Kai Li. CS-TR-94-493, Princeton University. A Study of Integrated Prefetching and Caching Strategies Pei Cao, Edward W. Felten, Anna Karlin and Kai Li. CS-TR-94-479, Princeton University. Proceedings of SIGMETRICS/Peformance '95. Pei Cao, Edward W. Felten, and Kai Li. CS-TR-94-462, Princeton University, 1994. Proceedings of the First OSDI Symposium, 1994. Pei Cao, Edward W. Felten, and Kai Li. The TickerTAIP Parallel RAID Architecture . Recent Talks Slides for \"Application Controlled File Caching and Prefetching\" ; Postscript of Page 26 and Postscript of Page 46 . In particular, I am investigating two techniques to improve file system performance: application-specific replacement policies for the file cache, and aggressive prefetching of file data from the disk. I have developed a system in which the kernel allocates physical pages to individual applications, and each application is responsible for deciding how to use its physical pages for caching and prefetching. The system uses a fair global allocation policy in the kernel, and carefully integrates cache replacement, prefetching and disk scheduling. I am developing integrated caching and prefetching algorithms for parallel disk arrays.",
    "ground_truth": "faculty"
}
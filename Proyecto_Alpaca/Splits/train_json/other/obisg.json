{
    "TÃ­tulo": "PS314 Instruction Set Simulator",
    "Cuerpo": "MIME-Version: 1.0 Server: CERN/3.0 Date: Monday, 16-Dec-96 23:18:18 GMT Content-Type: text/html Content-Length: 5480 Last-Modified: Monday, 13-Mar-95 14:33:35 GMT PS314 Instruction Set Simulator [ Back to CS314 Home Page ] Project 2: PS314 Instruction Set Simulator Date Assigned :   March 2, 1995 Date Due :   March 16, 1995 Before a new processor is built, the architects usually implement an instruction-set simulator. This simulator runs programs written for the new architecture so that the instruction set can be fine-tuned for usability and work on software can be started before the hardware is available. This assignment involves the implementation of a PS314 instruction-set simulator in M68K assembly language. We will give you an M68K assembly language program which accomplishes part of this task, and you will add whatever assembly language code is necessary to make the simulator fully functional. This project is due Thursday, March 16 at the start of class. The completed program should simulate PS314 machine language instructions stored in a simulated PS314 memory. An attempt by a (simulated) PS314 instruction to fetch or store a memory address in the range 2^8 through 2^15 - 1 should cause an exception. Memory fetches and stores to addresses in the range 2^15 through 2^16 - 1 should cause input or output to occur. A memory fetch to an address A in this range should cause A to be printed out in hexadecimal, followed by a question mark, \"?\". The simulator should then accept a 16-bit hexadecimal constant to be input from the keyboard and should return that input as the fetched word. A memory store to an address A in this range should cause A to be printed out in hexadecimal, followed by a colon, \":\", and the value to be stored, also printed in hexadecimal. When started, your PS314 simulator should enter an input loop which allows values to be entered into the simulated PS314 memory. Your simulator should then read L hexadecimal 16-bit constants---one per line---storing the first at memory location A , the second at A + 1, ... and the last at A + ( L - 1 ) . What to Modify Make the following modifications to the PS314 instruction set simulator. Complete the implementation of any Bcc cases which are missing or not fully implemented. Implement the I/O cases in LOAD and STORE. If a bad memory access of this sort occurs in the interruption handler or in the RTI implementation, print an error message and halt the simulator. Make any other modifications necessary to bring the simulator into compliance with the PS314 specification. Mark your modifications in the simulator source code with highly visible comments. a hardcopy of the ouput produced by the Listing/Run option for the simulator run on the example given in the PS314 Specification.",
    "ground_truth": "other"
}
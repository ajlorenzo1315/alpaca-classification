{
    "Título": "Sin título",
    "Cuerpo": "% Part A married(philip, elizabeth). married(charles, diana). married(diana, charles). % Part B grandparent(X,Y) :- parent(X,Z), parent(Z,Y). mother(X,Y) :- parent(X,Y), female(X). % X is a mother of Y if X is a female parent of Y % A mother-in-law is the mother of a spouse. % A sister in law is either the sister of a spouse; or the wife of a sibling; % or the wife of a sibling of a spouse. % Part C % The problem is that this often go into infinite loops: % -- if you ask a query whose answer should be \"no\" %             e.g. ?-married(philip, diana). %             e.g. ?- married(charles,X). married(X,Y) :- married1(X,Y). married(X,Y) :- married1(Y,X). % Run \"append\" backwards to split the last element from the rest of L, % then return them connected the other way. rotate(L,[X|R]) :- append(R,[X],L). % last(L,X) binds X to the last element of L. last([X],X). last([_|L],X) :- last(L,X). % rem_last(L,R) binds R to be all but the last element of L. rem_last([_],[]). rotate(L,[X|R]) :- rem_last(L,R), last(L,X). % e.g. rotate(L,[a,b,c,d,e]) succeeds with L=[b,c,d,e,a]. % Part D. % all_rotations(L,M) binds M to each rotation of L in turn.",
    "ground_truth": "other"
}
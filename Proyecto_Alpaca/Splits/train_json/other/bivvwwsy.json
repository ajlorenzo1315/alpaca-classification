{
    "TÃ­tulo": "CS 537 - Problem Set #2",
    "Cuerpo": "Each process can have up to 64K (65536) segments, and page size is 64K bytes. The segment tables (ST) and page tables (PT) are stored in main memory. Each page table entry (PTE) points to a page in real memory. Each PTE will also have: a \"read-enable\" bit, a \"write-enable\" bit, and a bit that is set on each reference to the page. This machine will support physical memories up to 64 gigabytes. Show how the pieces of the virtual address are used to reference each of the tables, and to generate the physical address. Indicate the size of each field, where it comes from, and where it is used. Also indicate where page faults or memory protection traps will be indicated. Is it a good idea to have a \"bounds\" field in your STE's? Why or why not? Should this bounds field be in units of bytes or pages? What happens if we double the page size (while still keeping a 64 bit virtual address)? Problem 2 Add a TLB to the memory mapping architecture that you described in Problem 1. This cache should be 4-way set associative and will have 256 rows. Draw a diagram of the TLB, showing the size of each field in the TLB. Indicate how bits of the VA are used for input to the TLB, and describe the outputs from the TLB. Problem 3 For each of the following page replacement algorithms, describe a case where the algorithm does a poor job in scheduling memory: LRU, LFU, FIFO. Get a faster CPU. Get a bigger disk. Get a faster disk.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": " Lecture notes - Chapter 8 - MAL and Registers",
    "Cuerpo": "at least 3 for instruction fetch 1 to load x 1 to load y 1 to store z 2 -- (load) at least 1 for instruction fetch, 1 for read of z 2 -- (add) at least 1 for instruction fetch, 1 for read of y 2 -- (store) at least 1 for instruction fetch, 1 for write of x --- 6   the same as for the 3 address machine -- no savings. BUT, what if the operation following the add was something like div x, x, 3 then, the value for x is already in the accumulator, and the code on the 1 address machine could be load z add  y div  3 store x there is only 1 extra instruction (2 memory transactions) for this whole sequence! So, use extra move instructions that allow moving data from a 32 bit address to one of these special 32 words. use only registers for operands is called a LOAD/STORE architecture. To reference a register as an operand, use the syntax $x,      where x is the number of the register you want. lb rt, x(rb)         # load byte place the byte at address    X + (rb)    into the least significant byte of register rt, and sign extend the value to the rest of the register. the value 0xffffffee is placed into the word of memory at address 0x00002004 There are 3:  getc, putc and puts AND, the operand is in a register. examples: putc $18     # prints out the character contained in the # least significant byte of the register la   $13, newline             # print out newline lb   $14, ($13) putc $14 For a load/store instruction, we need a register specification also (where the data is to come from/go to). The operand is in the register. This is #2. This is #2b. The contents of the address are the address of the operand. The initial address is located in a register (instead of in the instruction). place the byte at address    X + (rb)    into the least significant byte of register rt, and sign extend the value to the rest of the register. $11 gets the value 0x00002004, then the value 0xffffffee is placed into the word of memory at address 0x00002008",
    "ground_truth": "other"
}
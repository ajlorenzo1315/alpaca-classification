{
    "TÃ­tulo": "OSA Tutorial Page",
    "Cuerpo": "Systems Analysis is defined as the study of a specific domain of interacting objects for the purpose of understanding and documenting their essential characteristics. This document consists of a brief description of model-driven analysis , a discussion of the temporal logic of OSA, and concludes with a summary of the different components of an OSA model instance. There are three different levels in the OSA model hierarchy The Meta-Model A Model Instance A Data Instance The OSA meta-model describes valid model instances. A model instance is a model of a specific system such as an air traffic control system or a plant nursery database. OSA is seamless because the analyst can access meta-model level information from a model instance. Also, the OSA meta-model can be described as an OSA model instance. Model-Driven Analysis vs. Method-Driven Analysis OSA is model-driven in that it gives a meta-model for valid OSA models. An example of the difference between a model and a method is the problem finding the way to a terminal in an airport. In contrast, if a person looks at the airport map that gives an abstract view of the airport and a reference position with the \"You Are Here\" arrow, then a person will be able to find his way to his terminal. At any given time t a certain object may be a part of the data instance of a particular model. However, the object may not have been part of the data instance at a time prior to t and may not be part of the data instance at a time after t . If the data instance at time t is equal to the data instance at time t + 1, then the data instance was not changed during that time increment. Such complex relationships are a part of nearly every system and the Object Relationship Model allows the analyst to keep tabs on how objects are related to one another. The Object Behavior Model allows the analyst to construct an abstract computation machine called a state net that models the behavior of objects in a particular object set. Hence, an object can have one or more states activated at any one time. The trigger would be the condition that person's age is greater than or equal to 13. A person can talk to another person, an employee can complain to his or her boss, and a client can request a service or data from a server. However, it can also be used as a general high-level communication model in order to keep track of which object sets influence one another. High-Level Components are very useful when a quick overview of a system is needed, or when a clear understanding of the system being modeled can be achieved through further abstraction. Within these High-Level Objects, their parts, behaviors, and interactions would be modeled.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "CSE 457 libui documentation",
    "Cuerpo": "The main things that the libui library provides you with are: A main application window The application will have a main window which will hold all the controls, the text area, drawing areas, etc. Buttons are created and their actions specified by calling uiAddButton() . Toggle Buttons You can add toggle buttons to the control area of the main window which can be set to either True or False by the user. typedef void (* uiMouseCallback ) ( uiWindow * window , int x , int y , uiMouseAction action ); Mouse action callback - called in response to mouse input in window . void uiSetMainWindowWidth (int width ); void uiSetMainWindowHeight (int height ); Sets the size of the main application window. Window routines uiWindow * uiAddWindow (int x , int y , int width , int height , uiExposeCallback expose , uiMouseCallback mouse , void * userData ); Adds a drawing area inside the main window. void uiSetCurrentWindow ( uiWindow * window , uiDrawingPlane plane ); Sets the current drawing window. valueChangedCallback The callback procedure to be invoked when the slider's value is changed. Note that you can always get the value of a slider with uiGetSliderValue() , so you only really need to use the callback in cases where you want to take some immediate action in response to a slider being changed. current A pointer to where the current value of the slider should be written. When the user clicks on the menu button to reveal the popup menu, it is this text that the user will see. type The type of image - either SCALAR , for a grayscale image, or VECTOR , for a color image. Note that this routine allocates the memory for the image, so you need to call uiDeleteImage() to free up this memory when you're done with the image. This should be normalized to be between 0.0 and 1.0. void uiSetVectorValue ( Image * im , int ix , int iy , Vector val ); Sets the color of a pixel in an image. Vector uiGetVectorValue ( Image * im , int ix , int iy ); Returns the color value of a pixel. The return value of this function is a packed representation of the pixel color. This value can be used as the argument to a glColor4ub call. Drawing Routines void uiGetColorTableParams (int *start , int *size ); Only valid when using indexed color mode in the main window(s). This can only be used when drawing with indexed-color mode Mode to do drawing UI_XOR : specifies drawing in XOR mode UI_COPY : specifies drawing in standard draw mode void uiDrawImage (Image * im , int x , int y ); Draws image to given coordinates im Pointer to image in memory x , y Coordinates to draw image void uiFlush (); Signal to draw queued objects immediately. Glossary Callback Procedure A routine that is called by the interface library in response to some action (the user presses a button, a window becomes visible, etc) Idle Procedure A routine that is called periodically by the interface library, when there is nothing else to do.",
    "ground_truth": "other"
}
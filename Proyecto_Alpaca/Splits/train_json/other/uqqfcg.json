{
    "TÃ­tulo": "Lecture 5",
    "Cuerpo": "Relatively new programming Language (1980) developed by DoD. Currently, the only language approved for DoD software project Developed to reduce high cost of designing , writing and maintaining DoD software. 1988: DOD (and ANSI) established Ada 9X project. 15 Feb 1995: Ada 95. for CURRENT_DAY in DAY'FIRST..DAY'LAST loop ... end loop; ---Slide 7--- Primitive Scalar Types Discrete Types i) Enumeration Types, ii) Character type, iii) Boolean Types, iv) Integer Types Real Types i) Fixed-Point Types, ii) Floating-Point Types Note: Integer and Real types together form the numeric types . FL'DIGITS, FL'MANTISSA, FL'EMAX, FL'SMALL, FL'LARGE, FL'EPSILON ---Slide 10--- Derived Type Specific Type + Constraints E.g., Range Constraints for scalar Examples subtype BYTE_SIZE is INTEGER range -2**7..2**7; subtype CAPS is CHARACTER range 'A'..'Z'; subtype <identifier> is <parent-type> range <constraint>; Object Declaration X, Y: constant INTEGER range 0..128 = abs(N); <identifier>: <mutability> <type> <constraint> = <init-value>; Range constraint can be tested at runtime if CURRENT_INPUT not in CAPS then ... ---Slide 11--- Assignment Statement X := Y; Types must match Same type name--Not structure. (Program is not illegal.) A := B;              --illegal A := INTEGER(B);     --type conversion, legal A := C;              --legal A := D - 3;          --legal A := C + INTEGER(B); --legal C := D;              --constraint exception C := A;              --constraint exception ---Slide 13--- Arrays Arrays in Ada: Fixed Size---Type may be unconstrained at definition But bounds must be given at object declaration. Elements are all of same subtype Permits: Assignment, Equality Testing, Slicing, subtype NATURAL is INTEGER range 1..INTEGER'LAST; type SHORT_STRING is array(1..10) of CHARACTER; type STRING is array (NATURAL range <>) of CHARACTER; NAME: STRING(1..10); ---Slide 14--- Array Assignment Assigning array B to A : A := B Legal, if type of A is same as type of B . If A has same number of elements as B , then B is copied into A positionally ---Otherwise, constraint-error exception is raised. S := S(2..10) & S(1) -- & == concatenation opn Array Aggregates: type SYM_TAB is array (CHARACTER range <>) of INTEGER; TABLE: SYM_TAB('a'..'c') := (0, 1, 2); TABLE := ('c' => 2, 'b' => 1, 'a' => 0); TABLE := ('c' | 'b' => 1, others => 0); ---Slide 16--- Records Records in Ada: Heterogeneous : Components need not be of same type. end record; end record; ---Slide 19--- Access Types Allow manipulation of pointers. type STRING_PTR is access STRING; type STRING_10_PTR is access STRING(1..10); P.all := Q.all new creates a new object that can be designated by the access type. Access attribute is only applicable to an object whose lifetime is at least that of the access type. type CONST_INT_PTR is access constant INTEGER; VECTOR := (1..10 => 0); Conditional Statements if (A=1) then ... end if;                    case A is when 1 => --...; if (A=1) then                when 2 => --...; --...                      when others => null; elsif (A=2) then           end case; --... else --... end if; ---Slide 23--- Control Structures: Iteration Clause Iteration Statements---Basic Loop loop -- Statements to be repeated end loop; Iteration Clause Execution of a basic loop terminates when The iteration is completed or A loop exit statement is executed SUM := 0;                SUM := 0; for I in 1..10 loop      for I in reverse 1..10 loop",
    "ground_truth": "other"
}
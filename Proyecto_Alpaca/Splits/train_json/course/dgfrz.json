{
    "TÃ­tulo": "CS 537 - Introduction to Operating Systems - Spring 1996",
    "Cuerpo": "Problem Sets 1 and 2 are available (2/17/96). Programming Assignment 3 is available (3/31/96). The lecture notes are available on the class Web page. Modern Operating Systems and Object-Oriented Programming Using C++ are available in the book store. This section will be used mainly as a recitation section to discuss material covered in lecture and for the weekly quizzes. Each week, starting the second week of classes, there will be a quiz in the Discussion Section. Following are the past quizzes with answers: Processes and concurrency , February 7. These assignments will be written in C++ and done on workstations running It is unlikely that you will be able to do all these assignments on your personal computer. Programming assignment #1 is available. Programming assignment #2 is available. The goal of this assignment is to write a program that uses multiple processes and synchronization. Programming assignment #3 is available. You are to write a simulator for CPU scheduling algorithms; you will use traces of activities on a real UNIX systems to drive your simulation. These problem sets are for your use and do not need to be turned in. The goal of this assignment is to learn about using the various synchronization primitives to solve problems. Other than these three days, absolutely no late work will be accepted. Late days cannot be used on any assignment that is due during the last week of classes. Grading Policy If you don't take the final: If you take the final: Programming assignments: 40% Programming assignments: 30% Quizzes: 60% Quizzes: 45% Final: 0% Final: 25% Your lowest quiz grade will be dropped from the average; there will be no quiz during the first week nor during the week after Spring break. Class Schedule The following schedule is tentative and could (and probably will) change: Week 1 January 23 & 25 Introduction and overview, processes Week 2 January 30 & February 1 Dispatching, process creation Week 3 February 6 & 8 Cooperating processes, synchronization Week 4 February 13 & 15 Semaphores Week 5 February 20 & 22 Semaphores, monitors Week 6 February 27 & 29 Messages, deadlocks Week 7 March 5 & 7 OS debugging strategies, dynamic memory allocation March 12 & 14 Spring Break Week 8 March 19 & 21 Relocation Week 9 March 26 & 28 Segmentation, Paging, TLBs Week 10 April 2 & 4 Virtual memory, page replacement, thrashing Week 11 April 9 & Nov. 11 Working sets, I/O devices, files Week 12 April 16 & 18 Disk allocation and scheduling, directories Week 13 April 23 & 25 Protection Week 14 April 30 & May 2 Security, advanced topics (readings) Week 15 May 7 & 9 Advanced topics (readings) Finals May 14 Final Exam (Tuesday, 5:05pm) Last modified: Wed May 15 12:54:17 CDT 1996 by bart",
    "ground_truth": "course"
}
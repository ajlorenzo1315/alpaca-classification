{
    "TÃ­tulo": "\nCS195T: Introduction to Graduate Computer Science\n",
    "Cuerpo": "For undergraduates, the course is CS 178: Undergraduate Topics in Computer Science (Honors) (47730). Schedule Speaker Title September 9 Dan Miranker Alamo: The Net as a Data Warehouse September 16 Ben Kuipers The Spatial Semantic Hierarchy for Human and Robot Cognitive Maps September 23 Robert Blumofe Cilk and Cilk-NOW: Adaptive and Reliable Parallel Computing on Networks of Workstations September 30 Risto Miikkulainen Learning Sequential Decision Tasks Through Symbiotic Evolution of Neural Networks October 7 Vladimir Lifschitz Mathematical Principles of Logic Programming October 14 Paul Wilson Extensible Languages, Open Compilers, and Reflection October 21 Ray Mooney Learning to Process Natural Language Using Inductive Logic Programming October 28 Mike Dahlin Distributed I/O: from Clusters to Internets November 4 Gordon Novak Software Reuse by Specialization of Generic Procedures through Views November 11 Vijaya Ramachandran The Design and Evaluation of Parallel Algorithms November 18 Lorenzo Alvisi Lighweight fault-tolerance November 25 Calvin Lin Adaptive Libraries and High Level Optimization December 2 Greg Plaxton Analysis of Algorithms Lighweight fault-tolerance Lorenzo Alvisi Distributed systems have moved beyond the confines of academia and research labs and are revolutionizing the way in which businesses, governmental organizations, and simple citizens are processing and collecting information. Current technological trends promise to dramatically increase the pace of this revolution by enabling the design of highly cooperative distributed applications that go beyond the client-server paradigm to harness the computational power of distributed systems. In this talk we will explore a new way to design and engineer fault-tolerant solutions, which we call lightweight fault-tolerance. Adaptive parallelism means that the set of workstations on which a Cilk program runs can grow and shrink dynamically depending on the availability of idle workstations and on the amount of parallelism within the program. In wide area networks, the challenge is to provide good performance, availability, and consistency despite limited network performance and node or network failures. The causal graph of states and actions can in turn be abstracted to a topological network of places and paths. Mathematical Principles of Logic Programming Vladimir Lifschitz Logic programming, as well as its sister approach, functional programming, is based on the view that a computer program does not need to contain any explicit operational instructions. We describe a new framework for building such libraries, we describe three planned experiments that apply these techniques to libraries for parallel scientific computation, and we explain how our approach facilitates high level optimizations. Learning Sequential Decision Tasks Through Symbiotic Evolution of Neural Networks Risto Miikkulainen A novel reinforcement learning method called SANE (Symbiotic, Adaptive Neuro-Evolution) evolves a population of neurons through genetic algorithms to form a neural network for a given task. Symbiotic evolution promotes both cooperation and specialization in the population, which results in a fast, efficient genetic search and discourages convergence to suboptimal solutions. Finally, since the output of each of these advanced database facilities can themselves serve as data sources, the components of the Alamo architecture can be composed to resolve higher level data integration problems. Learning to Process Natural Language Using Inductive Logic Programming Raymond J. Mooney Inductive Logic Programming (ILP) addresses the problem of learning Prolog programs from examples. We are applying ILP methods to natural-language learning where we believe this richer representation offers important advantages. We have also developed an ILP system, FOIDL, which has been applied to learning the past tense of English, surpassing the previous results of neural-network and decision-tree methods on this problem. An Automatic Programming Server has been implemented on the World Wide Web; it will write specialized programs for the user, in a desired language, and serve the source code to the user as a file. Analysis of Algorithms Greg Plaxton A major focus of theoretical computer science is the design and analysis of asymptotically efficient algorithms (sequential/parallel/distributed, deterministic/randomized) for specific computational problems. The Design and Evaluation of Parallel Algorithms Vijaya Ramachandran The design and analysis of efficient parallel algorithms for combinatorial problems has been an area of extensive study in recent years, and a large number of algorithms have been developed on the abstract PRAM model of parallel computation. In this talk we will describe some of our work in the design of efficient parallel algorithms, and our experience with implementing and evaluating these algorithms on a massively parallel machine (Maspar MP-1). Extensible Languages, Open Compilers, and Reflection Paul Wilson Extensible languages allow interesting new features to be added to a language portably, from within the language itself.",
    "ground_truth": "course"
}
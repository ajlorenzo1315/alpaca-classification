{
    "TÃ­tulo": "CS 110 Section 2 - Program #3",
    "Cuerpo": "The data for each student in the class is stored in two files . Your program will read in these two files and write a table to a third results file showing each student's name, ID number, average and final grade. It is non-interactive because the user does not type in anything at the keyboard - all the necessary input comes from files that are already on disk. Student Data File Format: The name and ID number of each student is stored on a single line in the student data file in the following format: Column    Data                Variable Type ------    ----                ------------- 1-20      Name                CHARACTER *20 21-30     ID Number           CHARACTER *10 For example, Clark Kent          1679689152 Gareth Bestor       3912232504 I have created an example student data file which you should use to test your program, called \"r:\\public\\bestor\\cs110\\students.txt\". Assignment Scores File Format: The programming assignment scores for each student are stored on a single line in the scores data file. Results File: The purpose of your program is to write a table to the results file summarizing all the assignment scores and final grades for each student (Note: this table is not printed on the screen). The table must show the name, ID number, assignment scores, average and final grade for every student. For example, Name                 ID Number  Prog1 Prog2 Prog3 Prog4  Avg  Grade --------------------+----------+-----+-----+-----+-----+-----+----- Clark Kent           1679689152 96.59 25.82 55.91 92.90 67.81  Pass Gareth Bestor        3912232504 79.25 92.33 83.75 95.00 87.58  Pass Program Design: Your program should first OPEN the results file and write any preliminary table headings to it. You must then open up and read through the assignment scores file one line at a time until you find the scores for that student. If the ID number of this line matches the ID number of the student you are looking for then you have found it. All the students listed in the student data file will have one corresponding line in the assignment scores file (i.e. you will always find a match eventually). Debugging: To help debug your program you should print messages on the screen whenever anything significant happens. For example, when you read in a student from the student data file print their name and ID number. Also, when you read in each line from the scores file print that student's ID number and whether or not it matches the one you are looking for. Computing average and grade Writing to results file Read in student Gareth Bestor       3912232504 Read in scores for student 3912232504 Found student! You may copy my solution to your own directory and run it to see what sort of debugging messages should be displayed and what the results file should look like. I encourage you to use my solution to check the output of your program, but obviously do not use it to generate the output that you hand in (I will run your program myself to confirm this). You should copy my skeleton to your own directory and use it as the basis for writing your program. You also have to hand in a printed copy of your FORTRAN source code file, your results file and the screen output when your program is run with my two example files. Note that you will be graded on correct output for the two files I have provided, so before handing it in you must run your program with these files and check that your program gives the same results as my solution.",
    "ground_truth": "other"
}
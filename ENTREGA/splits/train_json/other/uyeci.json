{
    "TÃ­tulo": "CS 537 - Quiz #4",
    "Cuerpo": "Each client process that wants to read or write shared database will use the StartRead()/EndRead() or StartWrite()/EndWrite() , as appropriate. You are to write the four client procedures, plus the code for a server process. StartRead(): This procedure is called by a client process before it wants to have read access to the shared database. Note that the actual reading of the data is not done in this procedure. StartWrite(): This procedure is called by a client process before it wants to have write access to the shared database. Note that the actual writing of the data is not done in this procedure. By clever use of the message system (in this example, by using two message sends for each start request), I was able to use the implicit queuing provided by the mailboxes. MakeMboxName (mboxname); send (\"request\", STARTREAD); send (\"start-read\", mboxname); receive (mboxname, buff); } void EndRead() { send (\"request\", ENDREAD); } void StartWrite() { char mboxname[MAXNAMESIZE]; while (1) { Receive (\"request\", &value) if (VALUE == STARTREAD) { if (AW + WW == 0) { Receive (\"start-read\", mboxname); Send (mboxname, 0); } else { Receive (\"start-write\", mboxname); Send (mboxname, 0); } else { } } else if (VALUE == ENDREAD) { Receive (\"start-write\", mboxname); Send (mboxname, 0); } } else if (VALUE == ENDWRITE) { Receive (\"start-read\", mboxname); Send (mboxname, 0); } } } } } Solution: Version 2 Here's a slightly simpler one. This type of approach is valid, but not as useful since it work work if the client processes are on different hosts in a network. void StartRead() { send (\"request\", STARTREAD); receive (\"oktoread, 0); } void EndRead() { send (\"request\", ENDREAD); } void StartWrite() { MakeMboxName (mboxname); send (\"request\", STARTWRITE); receive (\"oktowrite, 0); } void EndWrite() { send (\"request\", ENDWRITE); } void ReaderWriterServer () { int value; int AR=0, WR=0, AW=0, WW=0; char mboxname[MAXNAMESIZE]; while (1) { Receive (\"request\", &value) if (VALUE == STARTREAD) { if (AW + WW == 0) { Send (\"oktoread, 0); } else { } } else if (VALUE == ENDREAD) { Send (\"oktowrite\", 0); } } else if (VALUE == ENDWRITE) {",
    "ground_truth": "other"
}
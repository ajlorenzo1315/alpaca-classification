{
    "Título": "Suggestions for Projects",
    "Cuerpo": "For lack of a better systemization we have grouped the projects into those which are primarily implementation, i.e., write code for a small interactive application, and those which are primarily theory oriented, e.g., study the smoothness of a class of subdivision schemes. The latter may at times involve small amounts of implementation along the lines of writing a Maple program to manipulate various Fourier transform expressions of subdivision matrices, for example. Implementation Projects Loop's scheme Loop's scheme is a subdivision method for surfaces which will work for arbitrary triangular meshes and which generalizes quartic triangular splines. Peters' C 1 surface scheme Jörg Peters has recently described a scheme for arbitrary topology meshes which results in a globally C 1 by generating a number of Bezier patches. The scheme is not as simple as Loop's scheme for example, but it results in a finite set of patches, while other generatlization such as Loop's scheme only produce a surface in the subdivision limit around extraordinary points. In fact surprisingly little is known about the smoothness around such extraordinary points. This can possibly be turned into an interpolating subdivision scheme for arbitrary topology meshes. Catmull-Clark and Doo-Sabin schemes These schemes generalize quadratic and cubic splines over arbitary topology meshes by modifying the schemes around extraordinary points. The are simple to implement and result in surfaces which are C 1 and C 2 everywhere except at extraordinary points. Butterfly scheme This is the only scheme which is interpolating by design. It is based on work by Dyn/Gregory/Levin and we have hardcopy of the article. For irregular vertices this is not true and there are a number of possible modifications that would be interesting to explore. Kobbelt's scheme This scheme is very similar to the Butterfly scheme except it works for meshes which have quadrilateral faces rather than triangular ones. Theory Projects Deslauriers Dubuc interpolating subdivision This is a classic scheme for the real line which is interpolating. The paper describes how to compute the exact Hölder smoothness of the resulting limit functions. Build a Maple (or Mathematica) toolbox to compute this smoothness for various order schemes. We have hardcopy of the relevant paper. This could easily be implemented in Matlab or Maple and it would be interesting to see just what kinds of curves one can build with this. For example, differentiating the interpolating schemes of Deslauriers-Dubuc leads to the average interpolating functions of Donoho . Copyright © 1995 Jim Arvo and Peter Schröder",
    "ground_truth": "other"
}
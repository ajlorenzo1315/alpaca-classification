{
    "Título": "tt3",
    "Cuerpo": "An operator applied to its operands is an application . ï Reduce to a single value by process of evaluation . (2 ¥ 3) + (20 _ 5) Þ 10 ï Evaluation of an expression can be traced . Inside-Out Simplification: To evaluate expression e , repeatedly replace an innermost application e' within e by its value using the appropriate rule of arithmetic. Expressions in C ó Operations Binary Operators Operator + - * / % Meaning + - ¥ _ remainder Examples: 6 + 1 Þ 77 - 2 Þ 57 * 2 Þ 1414 / 3 Þ 414 % 3 Þ 2 Unary Operators Operator + - Meaning identity negation Examples: -(2 + 3) Þ -5+(2 * 3) Þ 6 Relational Operators Operator < <= > >= == != Meaning < £ > ³ = ¹ ï In C, relational operations are just arithmetic operations: they yield integer values. Using = means something else in C; never use = in an expression. Examples: 5 == 5 Þ 15 < 5 Þ 04 < 5 Þ 15 <= 5 Þ 1 Expressions in C ó Precedence ï Parentheses can be used to group operators explicitly. ï In the absence of parentheses, operator groupings are determined by operator precedence . ï  But, to realize that the value of this expression is 7 (and not 9) a human needs to remember precedence order. ï My personal rule is to always use parentheses if the meaning of the expression is at all ambiguous. ï The value of this expression is obtained by applying function name to the arguments . Examples: abs(-3)sqr(3 + 4)GetInteger()hypotenuse(3, 4) Expressions in C ó Conditional Expressions condition ? true-exp : false-exp ï The value of a conditional expression is the value of false-exp if condition evaluates to 0, or the value of true-exp otherwise. ï Since C relational operators use values 1 and 0 for true and false, this allows a choice of value based on the outcome of a relational test. Convergence and Divergence ï Evaluation of an expression diverges if the result of an application is undefined. Example: 10 / 0 Þ diverges ï An operator is strict if it evaluates all of its operands. Example: +, -, *, / are strict: e.g., 0 * (1 / 0) Þ diverges conditional expressions are non-strict: e.g., 1 ? 2 : (3 / 0) Þ 2 Expressions in C ó Logical Expressions ï Logical operators are used to combine the logical values, true and false, in various ways. Meaning and or not Examples: 0 && 0 Þ 0 0 || 0 Þ 0 ! ï If there are no expressions, format is just a constant string to be output.",
    "ground_truth": "other"
}
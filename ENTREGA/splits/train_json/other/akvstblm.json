{
    "TÃ­tulo": "Abstracts of the Horus Papers",
    "Cuerpo": "A Framework for Protocol Composition in Horus Robbert van Renesse, Kenneth P. Birman, Roy Friedman, Mark Hayden, and David A. Karr August 1995 The Horus system supports a communication architecture that treats protocols as instances of an abstract data type. This approach encourages developers to partition complex protocols into simple microprotocols, each of which is implemented by a protocol layer. We then present an example layer that implements a group membership protocol. However, it is shown that in order to implement strong virtual synchrony, the application program has to block messages during view changes. The main conclusion of this comparison is that message packing influences the performance of total ordering protocols under high load overwhelmingly more than any other optimization that was checked in this paper, both in terms of throughput and latency. It is then shown how to provide efficient fault tolerant implementations for these definitions. Protocol Composition in Horus Robbert Van Renesse and  Kenneth P. Birman March 29, 1995 Horus is a communication architecture that treats a protocol as an abstract data type. We then present an example layer which implements a group membership protocol. Horus: A Flexible Group Communications System Robbert Van Renesse,  Kenneth P. Birman,  Bradford B. Glade,  Katie Guo,  Mark Hayden,  Takako Hickey,  Dalia Malki,  Alex Vaysburd and Werner Vogels March 23, 1995 The Horus system offers flexible group communication support for distributed applications. In this paper, we will show how this protocol can be used in conjunction with existing privacy preserving protocols to allow a user of a mobile computer to maintain privacy despite active attacks. Design and Performance of Horus: A Lightweight Group Communications System Robbert van Renesse, Takako M. Hickey, and Kenneth P. Birman december 1994 The Horus project seeks to develop a communication system addressing the requirements of a wide variety of distributed applications. Support for Complex Multi-Media Applications using the Horus system. A Security Architecture for Fault-Tolerant Systems Michael K. Reiter,  Kenneth P. Birman and  Robbert Van Renesse June 1993 Process groups are a common abstraction for fault-tolerant computing in distributed systems. We detail the design and implementation of these services and the secure process group abstraction they support. In this paper we will describe a set of protocols that we have developed to allow a user with a mobile computer to communicate without compromising privacy. Our results demonstrate that in contrast to Consensus, which cannot be solved in asynchronous systems with even a single faulty process, dynamic uniformity can be solved using a failure detection mechanism that makes bounded numbers of mistakes. Understanding Partitions and the ``No Partition'' Assumption Aleta M. Ricciardi,  Andre Schiper and  Kenneth P. Birman June 1993 The paper discusses partitions in asynchronous message-passing systems. Based on failure suspicions we give a definition of partitions that acccounts for real partitions as well as virtual ones. This paper shows that a FS with very weak semantics (i.e. that delivers failure and recovery information in no specific order) suffices to implement virtually-synchronous communication (VSC) in an asynchronous system subject to process crash failures and network partitions. Process Membership in Asynchronous Environments Aleta M. Ricciardi and  Kenneth P. Birman February 1993 The development of reliable distributed software is simplified by the ability to assume a fail-stop failure model.",
    "ground_truth": "other"
}
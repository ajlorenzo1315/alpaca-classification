{
    "TÃ­tulo": "CS 110 Section 2 Lecture Notes - Week 4",
    "Cuerpo": "DO/END DO , DO WHILE/END DO and DO/CONTINUE statement. DO/CONTINUE Statement (FORTRAN-77) To re-execute one or more statements use the DO/CONTINUE statement. DO label count = start, end, inc statements to re-execute label  CONTINUE 12345678901234567890123456780 ----------------------------- end - start + inc Number of iterations = ----------------- inc If start > end the loop isn't executed at all! Labels The label is the line number of the CONTINUE statement to indicate the end of the loop. The DO and CONTINUE statements start in column 7. ... 20   CONTINUE Conditional Loops DO statement re-executes the same statements a pre-determined number of times. PRINT *, 'The total sum is', SUM DO WHILE Statement (FORTRAN-90) Tests a condition on each iteration. If the condition is .TRUE. DO WHILE (condition) statements to re-execute END DO The condition is a logical expression , just like an IF statement. Can re-write a DO/CONTINUE loop as a DO WHILE loop. 10   CONTINUE is the functionally the same as COUNT = MIN END DO FORTRAN-77 \"DO WHILE\" Loop The DO WHILE statement is not standard FORTRAN-77 and may not be available on all compilers. To implement the equivalent of a DO WHILE loop in FORTRAN-77 we can use an IF statement and a GOTO statement. 0) ... END DO can be written as 10   IF (NUM .NE. Inner loop is executed X number of times, depending on the current value of X. Nested loops must use different counter variables. The end of the loop is indicated by the END DO statement. 10   CONTINUE is the same as DO ADD = 1, 10 Important : Always use the DO/END DO loop instead of the DO/CONTINUE loop in this class.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "Assignment 1: Handout",
    "Cuerpo": "Your job is to complete and thoroughly test the program. Your Job The IntSequence ADT will represent a sequence of integers by stroring the numbers in an array of integers. The IntSequence type supports five operations, each of which takes the integer sequence as its first argument: void clear(IntSequence& seq); void append(IntSequence& seq, int value); int length(IntSequence& seq); void printN(IntSequence& seq, int number); void sort(IntSequence& seq); The clear operation initializes (or reinitializes) a sequence to be empty (contain zero elements). The sort operation sorts the integers in a sequence into ascending order. To make your job as simple and clear as possible, we have provided three files: intseq.h , intseq.c , and prog1.c . The file intseq.h contains a complete C++ specification of the ADT-- you should not edit this file . The file prog1.c contains a complete main routine that serves as a test driver for your ADT implementation-- you should not edit it eithe r. Your job is to make a copy of the file intseq.c , which contains stubbed-out functions for the ADT operations, and add the actual implementation code. You can then debug and test your code using gdb and the driver routine in prog1.c . We have provided a small set of test data files , but you should add more test cases to find the important cases that our files fail to exercise . This algorithm sorts an array of data by stepping through the array, an element at a time, and keeping everything to the left of the current element sorted. Inserting the element requires that all elements with greater values than the element be slide one position right to make space. This can be done by scanning left from the position from which the current element was copied, sliding each element one space to the right if its value exceeds that of the current element. The insertion point will be known (and a spot will be open) when you either find a lesser value or bump into the left end of the array. What To Turn In You must turn in: A copy of all source files, including intseq.c and the other files needed to compile your program. A file named README that explains exactly what we should do to compile your files into an executable program that we can run. We have created a directory for each student to turn in his or her assignment. (However, finishing should not be a problem for anyone in this first programming assignment. If you can't finish this assignment, which is a simple \"warm-up\" exercise, you should seriously re-think your decision to take this course. The three C++ files that we provide and the test data files, are in a subdirectory of this directory called assign1 . You should make yourself a copy of the file that you will be modifying, intseq.c , in an Assignment-1 subdirectory of your home directory.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "Paradyn Project Papers",
    "Cuerpo": "Paradyn is a performance measurement tool for parallel and distributed programs. Unmodified executable files are placed into execution and then performance instrumentation is inserted into the application program and modified during execution. In this paper we present a new data collection cost system that provides programmers with feedback about the impact data collection is having on their application. We also describe an implementation of the cost model and presents results from using it to measure the instrumentation overhead for several real applications. Dynamic Control of Performance Monitoring on Large Scale Parallel Systems Jeffrey K. Hollingsworth and Barton P. Miller. We present a case study describing how a prototype implementation of our technique was able to identify the bottlenecks in three real programs. The W3 Search Model and Dynamic Instrumentation are being incorporated into the Paradyn Performance Tools. Mapping Performance Data for High-Level and Data Views of Parallel Program Performance R. Bruce Irvin and Barton P. Miller. We also describe how we use this information to produce performance data at the higher levels, and how we present this data in terms of both the code and parallel data structures. We have developed an implementation of these mapping techniques for the data parallel CM Fortran language running on the TMC CM- 5. Mechanisms for Mapping High-Level Parallel Performance Data R. Bruce Irvin and Barton P. Miller. We discuss several aspects of this problem and presents three methods with which performance tools can map performance data and provide accurate performance information to programmers. The three mapping methods are orthogonal; we describe how they should be combined in a complete tool. IFIP WG10.3 Working Conference on Programming Environments for Massively Parallel Distributed Systems (Ascona Switzerland, April 1994) Users of high-level parallel programming languages require accurate performance information that is relevant to their source code. In this paper, we present NV, a model for the explanation of performance information for programs built on multiple levels of abstraction. We computed new distributions that should provide an overall reduction in program execution time. We present NV, a model for the explanation of performance information for high-level parallel language programs. Finally, we present results of measurement studies in which we have used ParaMap and Paradyn to improve the performance of a variety of real CM Fortran applications running on CM-5 parallel computers. Steering emphasizes the optimization and control of the performance of a program using mechanisms that are external to the program. In this paper we describe a configuration that integrates a performance tool, Paradyn, and a debugger to build a steering environment.",
    "ground_truth": "other"
}
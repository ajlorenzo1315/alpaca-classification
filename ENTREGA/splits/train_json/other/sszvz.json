{
    "TÃ­tulo": "\nBU CAS CS 552: Operating Systems---Homework\n\t\t",
    "Cuerpo": "(See the reviewing guidelines .) ACM Transactions on Computer Systems. Proceedings of the ACM Symposium on Operating Systems Principles (available as special issues of Operating Systems Review ). ACM Transactions on Programming Languages and Systems. IEEE Transactions on Software Engineering. Proceedings of the IEEE International Conference on Distributed Computing Systems. ( Note: the definition in [Tanenbaum 92, p.34] is wrong , although the explanation is correct.) Design the OS for a special purpose computer that controls the various components of a car. The system would consist of CPU, RAM, multiple sensors (speed, gas pedal position, brake pedal position, proximity to other objects on the road, etc. ), multiple actuators (fuel flow, fuel/air mixture, brakes, transmission, etc. Assume that you have a function controlCar that implements one step of a successive approximation control algorithm. Further assume that controlCar will be the only user program running on your system, and that invoking it at the proper times with the correct inputs will be the task of your special purpose OS. Your OS would have to observe the constraints imposed by the physical properties of the various components of the car, by driving convenience , and, most importantly, by the necessity to maintain the safety of human passengers. A general requirement is that the OS should use the best approximations for the actuator values that can be obtained by successive calls to controlCar without violating more important requirements. The main design decision for your OS will be whether to adopt a software architecture based on polling or interrupts, or perhaps a hybrid. As part of your design, you should specify: A hardware configuration for an example system that can run your Sketch the software structure of your OS. To do this you can use a variety of diagrams, such as block structure, control flow, data flow, and execution trace diagrams. What would it take to substitute different implementations of controlCar ? [ Created 1996.09 .",
    "ground_truth": "other"
}
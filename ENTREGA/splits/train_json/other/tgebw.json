{
    "Título": "MultiMATLAB",
    "Cuerpo": "MIME-Version: 1.0 Server: CERN/3.0 Date: Sunday, 24-Nov-96 21:36:35 GMT Content-Type: text/html Content-Length: 45272 Last-Modified: Tuesday, 07-May-96 00:51:59 GMT MultiMATLAB MultiMATLAB: MATLAB on Multiple Processors Anne E. Trefethen Cornell Theory Center aet@tc.cornell.edu http://www.tc.cornell.edu/~anne Vijay S. Menon Computer Science Department, Cornell University vsm@cs.cornell.edu http://www.cs.cornell.edu/Info/People/vsm Chi-Chao Chang Computer Science Department, Cornell University chichao@cs.cornell.edu http://www.cs.cornell.edu/Info/People/chichao/chichao.html Grzegorz J. Czajkowski Computer Science Department, Cornell University grzes@cs.cornell.edu http://www.cs.cornell.edu/Info/People/grzes/grzes.html Chris Myers Cornell Theory Center myers@tc.cornell.edu http://www.tc.cornell.edu/CSERG/myers Lloyd N. Trefethen Computer Science Department, Cornell University lnt@cs.cornell.edu http://www.cs.cornell.edu/home/lnt Abstract: MATLAB ® , a commercial product of The MathWorks, Inc., has become one of the principal languages of desktop scientific computing. Such a user's problems might be solved by a system that makes it convenient to spawn MATLAB processes on multiple processors of a parallel computer or a network of workstations or PCs. The standard MultiMATLAB command for executing commands on one or more processors is Eval . If the user now types Eval( 'sqrt(2)' ) then the MATLAB command sqrt(2) is executed on all six processors. SPMD programs can be built upon Send and Recv commands. If there are six processors the command Eval( 'cycle' ) produces the output a = 1 a = 2 a = 4 a = 8 a = 16 a = 32 The processes run asynchronously, but since each Send command is only executed after the corresponding Recv has completed, the proper sequence of computations and final value 32 are guaranteed so long as all of the nodes are functioning. The Bcast command is used to broadcast a matrix from one process to all other processes, using a tree-structured algorithm. For example, Eval( 'Bcast(1,ID)' ) returns the number 1 on all processes. One of the aims of this project, however, is to provide also an interface at a higher level by building on these routines, hiding as much of the message passing as possible. The figure below shows an example of this kind of computing; in this case we have a 4 by 1 grid of windows. In this particular example, what has been computed are the pseudospectra of a 64 by 64 matrix known as the \"Grcar matrix\" [ 17 ]. Such a problem is easily parallelizable, and the next figure shows a case in which it has been distributed to four processors. A consequence of this limitation is that once MultiMATLAB is running on multiple processors, it is not possible to add further processors to the list except by quitting and starting again. A group at the Center for Supercomputing Research and Development at the University of Illinois has developed FALCON (FAst Array Language COmputatioN), a programming environment that facilitates the translation of MATLAB code into Fortran 90 [ 2 , 3 ]. In the Parallel Toolbox, there is a level of indirection not present in MultiMATLAB between the MATLAB master process and the slaves, a PVM process known as the PT Engine Daemon. As mentioned, this approach has also been followed by the Rostock/Wismar and Wake Forest University projects, using PVM or another message passing system rather than MPI. We run MATLAB processes on multiple processors, with full access to all the usual capabilities such as Toolboxes. It gives MATLAB users easy access to message passing, here and now. In Languages and Compilers for Parallel Computing, pp. Nick Trefethen , a Professor in the Department of Computer Science at Cornell, has been using MATLAB since 1980.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "The U-Net Packet Filter",
    "Cuerpo": "In the case of connection-less packets, program A can open a broadcast or multicast channel. The cell is used for storing channel information (such as a channel's field values, such as port numbers and addresses), and it is used as a pointer to other cells and hash table. 4.2  Protocol Hierarchy in the U-Net Packet Filter DAG The current implementation supports 4 protocols, two of which are open standards. The following protocols are broken down has follows: Raw U-Net: The modified version of U-Net (devtulip.c) is backwards compatible with the original implementation of U-Net. That is, packets can be demultiplexed to Raw U-Net channels based on the following fields: U-Net Code U-Net Port number Figure 2:  Raw U-Net Ethernet Header These types of channels are not part of the UPF system. Packets are demultiplexed to their corresponding endpoint/channel based on the following fields: Ethernet Source (Addr) Raw Ethernet Type Figure 3:  Raw Ethernet Header The combination of these two fields uniquely specify an endpoint (unless the Source Addr is an ethernet multicast or broadcast address). For the case(s) in which a large number of Raw Ethernet channels are open, performance may be improved by replacing this linked list with a hash table. The combination of the following fields uniquely identifies a TCP/IP endpoint: Ethernet Type\t -- Ethernet Protocol IP Version -- IP Protocol Transmission Protocol -- IP Protocol (specifies TCP Protocol) Destination Port -- TCP Protocol Destination Address -- IP Protocol Source Address -- IP Protocol Source Port -- TCP Figure 5:  TCP/IP Composite Header Notice that fields from three different protocols uniquely identify a channel. Of the 7 preceding fields, we know that the packet is not IP if the ethernet type field does not match IP (0x0800). Figure 6:  At the IP Protocol Level in the UPF DAG If a match is found, then we descend another level into the DAG. The hash table itself is connected to the IP_PROTO cell corresponding to the TCP protocol. A hash function is then used, defined by the function hash_func_chan() in the source code, to hash into a table connected to the IP_CHANNEL_HASH node. Figure 8:  At the TCP/IP Channel Level in the UPF DAG If a match is found in the IP_CHANNEL linked list, we demultiplex the packet to the corresponding endpoint. Traversal of the DAG for UDP/IP requires the same seven fields that were used in TCP/IP. The difference is that at channel setup time, a unicast, multicast, or broadcast channel type can be selected. Choosing to open a multicast channel results in creating a new level of the DAG. Figure 9:  At the UDP/IP Mulitcast Level in the UPF DAG Each node in this linked list corresponding to an IP_CHANNEL with the same address information, but with pointers to different channels. The UPF code is designed to run on a Linux system over Fast Ethernet. 7.0  How to Go About Adding a New Filter to UPF Each filter is some combination of cells and hash tables connected together. In general, as many extensions can be made to UPF as is required by the needs of the U-Net user(s) 10.0  Conclusions The attempt to create a packet filter that can be used with U-Net was successful.",
    "ground_truth": "other"
}
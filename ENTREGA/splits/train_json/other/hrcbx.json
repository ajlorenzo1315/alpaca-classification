{
    "TÃ­tulo": "Homework 2",
    "Cuerpo": "MIME-Version: 1.0 Server: CERN/3.0 Date: Monday, 16-Dec-96 23:50:30 GMT Content-Type: text/html Content-Length: 6601 Last-Modified: Tuesday, 27-Feb-96 18:48:42 GMT Homework 2 Homework 2 Handed out: Tue, Feb 13th Due: Part 1 on Tue, Feb 20th Part 2 on Tue, Feb 27th This assignment must be done in groups of two with a different partner than homework 1.Hand in one solution per group (printed, not manuscript). 2  Heat diffusion - a small Split-C application Write a small Split-C program that simulates the diffusion of heat on a surface of arbitrary shape. Display the simulation in an X window. Background The dissipation of heat in an object is an example of a diffusive process, which is modeled by a differential equation which, if we assume the material is uniform takes the form: where is the temperature of the object at position x at time t. In this problem set, we will look at one and two dimensional objects (wires and plates), but the generalization to 3-D is obvious. Heat Dissipation in a wire For an infinite wire with an initial temperature distribution of it can be shown analytically that the temperature distribution at time t=0.25 is In order to discretize the problem, we first restict ourselves to a finite length of wire, say from x=-2 to x=2 and divide the wire into N sections of length dx = 4/N. The temperature function u(x) becomes u[0...N], where we will let segment 0 be centered at x=-2 and segment N be centered at X=2, so segment N/2 is centered at x=0. We will also have finite time steps of length dt. Hand in a plot of the analytical solution and your experimental one when N=64 and dt=0.001. This approximation scheme is not stable (i.e. the numerical solution will not converge to the true solution) when dt*N*N > 8. 2.2  Sequential program for 2-D heat diffusion The generalization of the heat transfer formula for 2-D problems is (assuming dx=dy): Write a program for your favorite workstation that simulates arbitrary shaped plates on a fixed 2-D grid. Your program should display the progress of the simulation using X-windows. Display every N-th time-step and allow the user to determine N. Keep the display code simple - you're not doing this to win a graphical design contest. Make your 2-D grid cover an area of x in [-2,2] and y in [-2,2]. 2.3  Parallel 2-D heat diffusion Parallelize your heat diffusion code. Also, be sure to choose the grid size and time step wisely so that your solution will converge. In each case measure the Mflops you achieve per processor. For the timings you probably need to turn the display output off (display the first and last time step so you can see that everything worked fine). For 2.2 and 2.3, produce snapshots of your simulation for the three shapes defined above, with t=0, t=ft/4, t=(3/4)*ft, and t=ft (ft is the final time). For each shape, make sure you use the same grid size, time step, and ft for both the sequential and parallel simulation. Color printouts are strictly forbidden.",
    "ground_truth": "other"
}
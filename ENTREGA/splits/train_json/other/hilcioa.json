{
    "TÃ­tulo": "Program 3 - CS 302 Fall 1996 - Section 4",
    "Cuerpo": "Second, the warehouse has a finite number of nails in stock, and your program must not allow the operator to place an order for more of one type of nail than is in stock. The cost of ordering some number of one type of nail can be calculated from the quantity ordered and the base price of each nail. Note that if the user orders 800 of a particular item at one point, and later orders 500 more of the same item, she should be given the discount as if she ordered all 1300 at once. Below is a chart of the item number, description, base cost per nail, and quantity on hand in the warehouse. Similar to the last program, you need prompt the user for the order, keep track of how many of each item have been ordered, loop until the user asks for the bill, display the final bill. However, this program requires that you prompt the user for the item number and quantity ordered. You must use the following code as your main function with no modifications to the code: // Your header comments go here print_bill(num_ord1, num_ord2, num_ord3, num_ord4); } Functions To Write The following is a list of functions that you must write for the assignment. calculate_price - This function (which will be called by calculate_subtotal) should take two arguments: quantity ordered of a particular item, and the price of the item. get_choice - This function should prompt the user for an item number. If the user enters an invalid choice, an error message should be printed, and the user should be reprompted for a new number. get_quantity - This function should prompt the user for the quantity of the order. You must ensure that the return value is a legitimate quantity (remember, if you have the user enter the number of nails desired, the number must be divisible by 100 to be valid, since nails come in 100 item packages). If the user enters an invalid choice, an error message should be printed, and the user should be reprompted for a new number. If the total quantity of the item requested is greater than the stock on-hand, as much as possible of the order should be filled, and an informative out of stock message should be displayed. If the ordering of an item causes the available stock to drop below 10,000 items, a descriptive \"low on item\" message should be printed, along with the appropriate item number. keep_going - This function should ask the user whether they would like to continue ordering items (or, it could ask the user if they want to print the bill.) print_bill - This function should print the number of each item ordered (only the items which the customer ordered more than zero of), the subtotal, and the final total (adding in 5% tax) in a way that is similar to the last program. What To Turn In Once you have your program working, you should print sample runs of the program. Your output file should demonstrate ordering quantities of the items such that various discount levels are calculated, orders that exceed the available items in stock, orders that cause a stock low message to be displayed, and an example where two requests for the same item are handled properly.",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "DEVise Model of Visualization",
    "Cuerpo": "Stages of Visualization File Schema TData Mapping GData Visual Filter View Window Link Cursor Stages of Visualization Visualization in DEVise is divided into stages, each stage supported by components responsible for the functions of that stage. The stages of creating a visualization are as follows: Import a file into DEVise as a textual data ( TData ). The schema is used to describe information about how to import the file. Select a view to display the GData. File The input file is provided by the user. An example of an ASCII file containing sin(time) and cos(time) might look like: #\ttime       sin        cos 0.000000.2 1.000000.2 0.000000.2 0.017453.2 0.999848.2 0.017452.2 0.034906.2 0.999391.2 0.034898.2 0.052358.2 0.998630.2 0.052334.2 ... Schema The schema file describes the layout of an ASCII input file. Once a file is imported into DEVise as a tdata, the user uses the tdata to create visualizations. Different types of input files are input into DEVise and treated uniformly as TData. Mapping A mapping converts TData attributes into graphical data (GData) attributes. The user decides how tdata is visualize by selecting the tdata attributes that map onto the the x, y, color and shape gdata attributes. For our example, we can create the following example mappings: sin_vs_time: x <-- time y <-- sin cos_vs_time: x <-- time y <-- cos sin_vs_cos x <-- cos y <-- sin Once a mapping is created, it can be used on all TData with the same file type. Visual Filter A visual filter defines a query over the graphical data attributes of the gdata. Our implementation supports range query over the X and Y GData attributes. View A view is used to display those gdata that fall within the range of the visual filter. Currently we have two types of views: Scatter and SortedX. The SortedX view implements optimizations used to reduce the time used to draw the gdata if the X attribute is sorted. A view can be removed from a window to reduce clutter, or be moved to another window so that related views are brought together for comparison. However, a link in theory can be used on any of the of the graphical attributes: x, y, color, size, pattern, orientation, and shape. Cursor A cursor can also be used to display the X/Y boundaries of one view within another view. Click in the axes area of the destination view to move the source view (by changing its visual filter) to the location clicked.",
    "ground_truth": "other"
}
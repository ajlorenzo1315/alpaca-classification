{
    "TÃ­tulo": "Chinook Paper list ",
    "Cuerpo": "Date: Tue, 10 Dec 1996 03:38:27 GMT Server: NCSA/1.4.2 Content-type: text/html Chinook Paper list Chinook Paper List and Abstracts Chinook Overview [COB95a] Pai Chou, Ross B. Ortega, Gaetano Borriello, \"The Chinook Hardware/Software Co-Synthesis System,\" in International Symposium on System Synthesis , Cannes, France, September 13-15, 1995. Embedded systems are becoming more commonplace and are being designed by larger numbers of designers with ever tighter constraints on design time. The Chinook co-synthesis system, under development at the University of Washington, addresses the automation of the most time-consuming and error-prone tasks in embedded controller design, namely: the synthesis of interface hardware and software needed to integrate system components; the migration of functions between processors and/or custom logic; and the co-simulation of system specifications before, during, and after synthesis. In this paper, we describe the principal elements of the Chinook system and discuss its application to a variety of embedded designs. In this chapter, we discuss an approach to these issues that we believe will lead to a new generation of embedded system design tools that will permit designers to more fully explore the design space and attain a higher confidence in the appropriateness of their designs. It addresses the automation of the most time-consuming and error-prone tasks in embedded controller design, namely: the synthesis of the interface hardware and software needed to integrate system components; the migration of functions between processors and/or custom logic; and the co-simulation of system specifications before and after synthesis. Without the automatic synthesis of these interfaces, designers are not able to fully simulate and evaluate their systems. This paper presents a set of techniques that form the basis of a comprehensive solution to the synthesis of hardware/software interfaces. Microcontroller-based systems require the design of a hardware/software interface that enables software running on the microcontroller to control external devices. This interface consists of the sequential logic that physically connects the devices to the microcontroller and the software drivers that allow code to access the device functions. This paper presents a method for automatically synthesizing this hardware/software interface using a recursive algorithm. [WB94b] E. A. Walkup and G. Borriello, \"Automatic Synthesis of Device Drivers for Hardware/Software Co-design\" University of Washington Department of Computer Science Technical Report 94-06-04 Automatically synthesizing device drivers, the hardware and software needed to interface a device to a processor, is an important element of hardware/software co-design. Scheduling [CWB94] Pai Chou, Elizabeth Walkup, Gaetano Borriello, \"Scheduling Issues in the Co-Synthesis of Reactive Real-Time Systems,\" in IEEE Micro , August 1994, pp.37-47. Our perspective is based on experience with Chinook, a hardware-software co-synthesis system for reactive real-time systems, currently under development at the University of Washington. [CB95] Pai Chou, Gaetano Borriello, \"Interval Scheduling: Fine Grained Code Scheduling for Embedded Systems,\" DAC-95 , June 1995. A central problem in embedded system co-synthesis is the generation of software for low-level I/O. Scheduling still remains a manual task because existing coarse-grained real-time scheduling algorithms are not applicable: they assume fixed delays even though the run times are often variable, and they incur too much overhead. [CB94] Pai Chou, Gaetano Borriello, \"Software Scheduling in the Co-Synthesis of Reactive Real-Time Systems,\" in Proceedings of the Design Automation Conference , San Diego, CA, June 1994, pp.1-4. Existing software scheduling techniques limit the functions that can be implemented in software to those with a restricted class of timing constraints, in particular those with a coarse-grained, uniform, periodic behavior. This algorithm is suitable for control-dominated embedded systems with hard real-time constraints, and is part of the core of a hardware/software co-synthesis system.",
    "ground_truth": "other"
}
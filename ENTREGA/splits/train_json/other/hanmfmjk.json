{
    "TÃ­tulo": "CS 302 Style Guide",
    "Cuerpo": "In this class your program needs to be easily understood by you and by your instructor/grader. Think of your source code as a document describing your implementation. What is Style? // Program 0:    The Bean Counter int main () { int number_of_beans;                // Number of beans (from user) const double bean_weight = 2.051;   // Average bean weight in grams cout << \"Please enter the number of beans\" << endl; cin >> number_of_beans; if (number_of_beans >= 0) { cout << \"Number of Beans: \" << number_of_beans << endl; cout << \"Average Weight: \" << bean_weight << endl; cout << \"Total Weight: \" << number_of_beans * bean_weight << endl; }   | }   |   | |   |   | |   |   | |   |   +---- Level 2 (indented eight spaces) |   | |   +-------- Level 1 (indented four spaces) | +------------ Level 0 (not indented) I don't care how much you indent, but you must be consistant in your indenting. Furthermore, if you indent two spaces anywhere in your code, you must indent two spaces everywhere in your code. It is not necessary to indent case labels within a switch statements and public/private labels within class definitions, but you may do so if you wish (see below). If you use one style anywhere in your code, you must use the same style everywhere in your code. // Function:     Eat_Beans // Description:  Notice how there are two blank lines between this //               function and the next function. // Return total number of beans in carton int total_beans = int (Carton.weight() / average); return total_beans; } Horizontal Whitespace There should be a single space between most operators and their operands. For example: // Do it like this: int i = 5 + 8 * (9 - 3); cout << \"Hi\"; // Do it like this: beans[i++] = -j; // Not like this: beans [ i ++ ] = - j; Comments Program Header Each program should have a block of comments at the top of the file that contains the main() function. These comments must contain the name of the program, your name, your course and section, the date and your email address. The file header should include a description of what is contained in the file, and how the code in the file relates to the rest of the program. The function header explains the inputs, outputs and side effects of the function, as well as a short description of what the function does. // Function:     Count_Beans // Inputs:       Weight of beans (in tons) // Outputs:      Number of beans // Description:  Calculates the number of beans based on the //               average weight of a navy bean at sea level. // Function:     Count_Beans // Description:  First take a sample of the beans database to aproximate //               the weight, and then use this to estimate the total number //               in the carton. //               Return the number of beans. // Return total number of beans in carton int total_beans = int (Carton.weight() / average); return total_beans; } Identifier Names Naming Conventions Most identifiers, including most variables and all functions and classes, should have a descriptive name. // Do it like this: int i; for (i = 0; i < MAX_BEANS; i++) beans[i] = new Bean;",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "Overview of the Horus Project",
    "Cuerpo": "MIME-Version: 1.0 Server: CERN/3.0 Date: Monday, 16-Dec-96 21:50:57 GMT Content-Type: text/html Content-Length: 7434 Last-Modified: Tuesday, 19-Nov-96 20:35:46 GMT Overview of the Horus Project Overview of the Horus project Five years ago, Kenneth Birman and Robbert van Renesse started the activity that ultimately lead to the design of Horus. At the outset, the project was perceived as a redesign of the Isis group communication system. Broadly, Horus is a flexible and extensible process-group communication system, in which the interfaces seen by the application can be varied to conceal the system behind more conventional interfaces, and in which the actual properties of the groups used (membership, communication, events that affect the group) can be matched to the specific needs of the application. If an application contains multiple subsystems with differing needs, it can create multiple superimposed groups with different properties in each. Horus is suitable for building high performance groupware applications and we are now working on real-time applications, notably in the area of telecommunications switch management. For users who wish to develop new groupware protocols, Horus can be viewed as a group communication environment rather than as a collection of prebuilt groupware solutions. It is UNIX-independent, and permits the use of several programming languages (C, C++, ML, and Python) in a single system. Through dynamic run-time layering, Horus permits an application to adapt the protocols it runs to the environment in which it finds itself. Much of our research has been on the issues associated with developing layered groupware protocols. Over time, Horus layers have become much simpler than expected, and consequently lend themselves to automatic verification. Existing Horus protocol layers include an implementation of virtually synchronous process groups (a technique permitting consistent and fault-tolerant data replication), as well as protocols for parallel and multi-media applications. Considerable recent work has been done on protocols for secure group computing and for real-time applications. On the theoretical side, the project has contributed a significant body of fundamental results in the overall areas of distributed fault-tolerance, consistency, security and private communication in group-communication systems. Current work includes study of how properties can be proved for composed stacks consisting of multiple layers, basic theoretical work on virtual synchrony, and study of systems that combine real-time and logical consistency properties. Horus can be used as a Java communication protocol, and is appropriate for system management in complex large-scale internet settings. Other likely application areas include transparent fault-tolerance options for limited classes of applications, security and system monitoring, and database replication. The Horus software is available for use by research laboratories. Commercial use of the technology should be possible by late in 1996 or early 1997, through an arrangement with Stratus Computers Inc. Project funding. ARPA has played a significant role in the progress made by the Horus project by providing long-term funding through the Office of Naval Research under contract N00014-92-J-1866. Comments to Werner Vogels",
    "ground_truth": "other"
}
{
    "TÃ­tulo": "Operating Systems Laboratory\nOrganization and Tools",
    "Cuerpo": "The computers in the laboratory for CSC 451 consist of a single Sun Sparc and five Sun 3/60 Xinu clients, named friedpie, fishstick, onionring, tatortot, and frenchfry. Hushpuppy uses the SunOS operating system which is a 4.3 version of UNIX with System V release 3.2 extensions. The following is an example to show how to display man pages for the SunOS command ls, which will list the contents of a directory. Contents Operating System Development Tools Xinu is a small operating system originally designed for the Digital Equipment LSI 11 computer but has been transported to other platforms; it is for this reason that a Xinu target machine is sometimes called an LSI. The C and MC68030 assembly source files for Xinu 6 are located in the directory /usr/Xinu/src, Xinu header files are in /usr/Xinu/include/, and the library files are located in /usr/Xinu/lib/. The distinction between the different types of files is made by the suffix of the file name: Suffix\t\tFile Type .c\t\tC source code .s\t\tMC680xx assembly source .o \t\tobject file .a\t\tobject file library For example, xcc would assume the files main.c, io.c, and control.c to be C source code and the file lowlevel.s to be an assembly module. The xcc command can be used to generate modules for downloading that do not contain the Xinu operating system. The -L switch is used to create this standalone object file. For example, to compile a C source file named main.c, an assembly listing named lowlevel.s, and the object io.o into an executable named prog1 use xcc in the following way: xcc -o prog1 main.c lowlevel.s io.o For more information about the above options, consult the man pages on the Sun C compiler (cc command). To run a downloaded program, enter odt at the prompt on the server machine. If you do not get a prompt or if it seems that a program is already running on the client then enter the key sequence \\ (the backslash character) followed by &ltControl-@> repeatedly until the 3/60 responds with the correct prompt. sun4-%odt using front end 'hushpuppy':   Using backend 'fishstick' Using /dev/ttyX Note: The X in the line Using /dev/ttyX will be a device name such as m00. Two switches (program options) commonly used with odt are -m and -h. Switch\t      \t\tPurpose -mMachine Name  \tcauses odt to connect the user terminal to Sun named Machine Name (an odt following a download will automatically use the same 3/60 selected by the download if the -m switch is not used) This sample program is compiled using the xcc command and download with the Xinu operating system to a Sun 3/60. The third thing is the name of the function that will be called when you type the command from the shell prompt. \",            FALSE,          x_help          \\ \"command\",      FALSE,          my_command Note: When adding commands to usercmds make sure the name of the function has the same name as the file. It should be located in the following directory: {home}/xinu/src/sys To execute it you will probably have to tell the shell where the script is located since this directory is not in your path. Trouble with download If the hushpuppy responds to a download request with NO Suns Available you must wait until someone releases a target machine as all are currently in use. If you see any prompt other than > when you start an odt session then another user's program is still running on the client. If a &ltControl-c> does not return you to hushpuppy, login to another terminal and kill your odt process (or ask an operator to do this for you).",
    "ground_truth": "project"
}
{
    "TÃ­tulo": "The Paradise Project",
    "Cuerpo": "Document Contents: Objective Client Server Paradise Samples of the Paradise Frontend Contact Information See Also: Publications related to Paradise People working on Paradise SHORE Project: Object Manager used for Paradise The OPT++ Extensible Optimizer Paradise Bug Reporting Examine the Sequoia 2000 Benchmark scripts used in the VLDB 94 paper. Information on SSL . UW-Madison, Database Research Group UW-Madison, CS Department Server Objective: The objective of the Paradise project is to design, implement, and evaluate a scalable, parallel geographic information system that is capable of storing and manipulating massive data sets. By applying object-oriented and parallel database technologies to the problem of storing and manipulating geographic information we hope to significantly advance the size and complexity of GIS data sets that can be successfully stored, browsed, and queried. Client Server Paradise: Paradise is a database system aimed at handling GIS types of applications. Paradise provides a graphical user interface for querying and browsing the database and supports a subset of SQL for issuing ad-hoc queries. The Paradise front end allows you to display objects with spatial attributes on a 2-D map. You can customize the ordering and display of the layers by selecting color, labelling, and other display attributes for each query. The database can be queried either with a graphical interface or with ad-hoc queries. For ad-hoc queries, Paradise provides a query composer. Menus in the query composer provide access to the database schema to assist in query composition. Query results can either be viewed on the 2-D map, if they have spatial attributes, or they can be displayed in a table so that you can browse the tuples in the result. To SQL we have added the ability to invoke methods defined on the extended set of types. The current version of Paradise employs a client-server architecture. The front-end ships queries in our SQL syntax to the Paradise server for execution. After executing the query, the server ships the result objects back to the client. The Paradise server is multi-threaded so that multiple clients can connect to the same server. Samples of the Paradise Frontend Europe Data. For more samples press here. Biswadeep Nag (bng@cs.wisc.edu)",
    "ground_truth": "project"
}
{
    "TÃ­tulo": "Scott McCrickard's Home Page",
    "Cuerpo": "Date: Thu, 21 Nov 1996 22:13:07 GMT Server: Apache/1.1.1 Content-type: text/html Content-length: 7999 Last-modified: Wed, 02 Oct 1996 01:02:07 GMT Scott McCrickard's Home Page D. Scott McCrickard Background Scott McCrickard is a PhD student in the College of Computing at the Georgia Institute of Technology . He is a member of the Software Visualization Group in the Graphics, Visualization, and Usability Center at Tech. The focus of Scott's research is on Internet information monitoring and display . Scott has worked at Oak Ridge National Laboratories (ORNL) with Tom Rowan as a member of the Visual and Information Sciences Group . While at ORNL, Scott built the first version of Irwin , an information resource monitoring and display tool, as part of the GO-NII Collaborative Tools project. Research The focus of Scott's research is the area of information visualization. He has also done work in parallel and distributed computing. While users can access this information using any of a number of readers and browsers, it is difficult to determine when and if a resource needs to be accessed. Visualizations are needed that will provide an overview of these resources with a detailed look at recent changes. A multi-layer view of the resources simultaneously provides a broad overview of all resources plus a narrow look at recent changes without losing context. Recently, Scott was also part of a team that developed SQWID , a Java tool for visualizing the results from an Alta Vista search. Program Visualization examines methods for visualizing information about a computer program. By visually connecting the code and execution, the user can identify elements in the program that otherwise would not be visible. Scott is working on RunView , a runtime-based code analysis system that incorporates these and other ideas. He is also exploring how RunView can be used to decompose software architectures in a project with Gregory Abowd . Software Visualization is the use of graphics, visualization, and animation as an aid in the understanding of algorithms, architectures, and software. With these toolkits, a programmer creates objects and programs them with actions that occur over a number of frames. See GIT-CC-94-04 for a discussion of these parameters and a look at the properties of some distributed objects. He even took up golf recently in an effort to better understand his advisor . He spends too much time on the Web, as evidenced by the size of his hotlist .",
    "ground_truth": "student"
}
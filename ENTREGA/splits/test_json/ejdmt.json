{
    "TÃ­tulo": "CSE 521, Project",
    "Cuerpo": "This is the Traveling tourist problem. The CSE 521 course project is to implement algorithms for the Traveling Tourist Problem, and test them out on various data sets. The Speedy Tourist Page keeps track of the best tours found on each of the problem instances in the project data set. Eric Anderson has developed an applet to animate tours. An instance of the Traveling Tourist Problem is given by providing a schedule, which lists the departure time each bus. Since the problem is NP-complete, it is unlikely that you can find an algorithm that efficiently solves large instances. Another option is to implement an exponential algorithm, and use it to solve small instances of the problems. In this project, you should investigate both approaches for the Traveling tourist problem. There is a lot of literature on the Traveling salesman problem, so that suggests a number of approaches. However, there are significant differences between the two problems, so it will be necessary to invent new algorithms. This project is modelled after various DIMACS Challenges, where researchers were invited to implement algorithms to solve specific problems. An important aspect of the DIMACS Challenges was a publically available set of problem instances which made it possible to directly compare results. In this challenge, the problem is to do as well as possible on an NP-complete problem, so the two competitions are to come up with as good approximations on large instances, and to solve smaller instances exactly with a branch and bound algorithm. As far as I know, this isn't a well studied problem, so there should be a chance to prove some interesting theorems as well. How to Participate I welcome participation from outside of my University of Washington, CSE 521 class. The data files and source code are available from the web. If you can find better tours to the official instances, send them to me, and I will update the hall of fame. I will also keep track of lower bound results on various instances. There is also an algorithm which finds very bad tours. If you submit a tour, make sure that it conforms to the format of a tour file.",
    "ground_truth": "unknown"
}
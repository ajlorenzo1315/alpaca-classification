{
    "TÃ­tulo": "Program Four",
    "Cuerpo": "In Hangman, one player picks a word or phrase. For example, ###'# ###### is the hidden form of the Kurt Vonnegut book title CAT'S CRADLE The second player then repeatedly guesses letters in the word. The puzzle would become: #A#'# ##A### But if the user guesses a letter which isnt in the word (for example, a Q), then he is one step closer to the hangman's gallows. The game continues until either (1) the user guesses all of the hidden letters in the puzzle correctly, or (2) the user makes 6 mistakes. If the user makes 6 mistakes, he loses and the game is over. If the user guesses all of the letters correctly, he wins and should be given a congratualatory message. Some Details At the beginning of the game the program should prompt the first player for the puzzle. During each round, the second player should be shown the current state of the puzzle, and the current state of the \"gallows\". The program should then get and process the user's guess for that round. If the player loses, your game should display the correct solution to the puzzle. It is frustrating to play a game and not be told the correct answer when you lose. That is, it may count as another wrong answer or not. Initially, with no wrong guesses, the player is shown an empty gallows: ____ |  | | | | | ===== As the player makes more and more mistakes, more of their bodies is added to the gallows. | /|\\ | / \\ | ===== And, when the body is complete, the player has been \"hanged\", they lose and the game is over. then you can implement it as a stub function until you want to actually write it. You don't have to draw the gallows in a complicated way; feel free to do it in an easy, natural way. Hints You will somehow need to keep track of (1) the full text of the puzzle (so you can check to see if the user gives a correct answer) and (2) the letters/positions which are revealed (so when you display the puzzle, you can decide which characters to show and which characters to \"blank out\"). You will probably need two arrays to do this, the first a string to keep track of the \"real\" answer to the puzzle, the second some sort of array that somehow keeps track of how the displayed puzzle should look. The first game should be the puzzle \"sCubA\" with the guesses 'a', 'E', 'c', 'S', 'd', 'B', and 'u'. The second game can be of your choice.",
    "ground_truth": "unknown"
}
{
    "TÃ­tulo": "World Wide Web Specification Issues",
    "Cuerpo": "Solution: The Uniform Resource Identifier (URI) specification, a general specification that makes it possible to point to any document, anywhere. Uniform Resource Locators (URIs) The URI specification ``defines a way to encapsulate a name in any registered namespace, and label it with the namespace, producing a member of the universal set.'' Complete It is possible to encode any naming scheme Printable URIs are encoded in 7-bit ASCII and are designed to be at least partially human-understandable and communicable. Parts of the URI specification URIs consist of two parts: A prefix that indicates what namespace is being referenced, followed by a colon A string with format defined as a function of the prefix The extensibility requirement is met by the ability to register new unique prefixes. * and ! are reserved for use with special significance within specific namespaces. Examples of relative URI substitutions If the parent URI is http://www/b/c//d/e/f the following partial URIs result in the listed full URIs: g http://www/b/c//d/e/g /g http://www/g //g http://g ../g http://www/b/c//d/g g:h g:h Note that using the parent URI http://www/b/c//d/e/ would yield the same results. Now that a we have the URI specification, we need to be able to point to existing documents available on the Web. Side Note:  Multimedia and MIME The original Web browsers used the extension of a file to determine its type. When the file is received, the browser uses the MIME type to find an appropriate viewer for the file. Solution: The Hypertext Transfer Protocol (HTTP). A chronological summary of the changes in HTTP features is more interesting. The only request that could be made was ``GET (url)'', where ``url'' is an HTTP URL with the prefix stripped. The document pointed to by the URL would be returned to the browser. HTTP is a stateless protocol. HTTP 1.0:  Document Typing and CGI The next version of HTTP was designed to fix a number of problems with the previous versions and add new features. Some of these were: HEAD is the same as GET, but only returns the headers PUT allows data sent to the server to be stored under the supplied URL (not widely used) POST Creates a new object based on the data sent that is linked to the object specified in the supplied URL LINK links an object to the specified object (not widely used) UNLINK removes a link or other information from an object The most important of these methods is PUT, which is used in conjunction with the Common Gateway Interface. The Common Gateway Interface (CGI) and Forms Forms:  A specification for creating a fill-out form within an HTML document. Each browser that implements Forms is responsible for packing the information into a special format when a form is submitted and sending it to a specified URL. Interesting note:  Because HTTP is stateless, CGI scripts often have to play tricks to ensure that the state of a conversation is stored in the document returned to a client.",
    "ground_truth": "unknown"
}
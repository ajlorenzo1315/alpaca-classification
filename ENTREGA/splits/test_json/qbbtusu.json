{
    "TÃ­tulo": "CS 537 - Problem Set #1",
    "Cuerpo": "The rules for this intersection are: Each car (process) arriving at the intersection will call a procedure Enter(inDir, outDir) , where inDir and outDir are parameters whose value is one of the defined constants: NORTH , SOUTH , EAST , or WEST . The parameter inDir is the direction that you enter the intersection, and outDir is the direction that you will leave the intersection. The east-west street has a single lane. You are to write the code for the Enter() and Leave() procedures. You should write three versions of the program. Assume that car each is a process. You are to define the global variables (including semaphores) that are to be used, and how they are initialized. You are to then write the code that the cars will use. You are to first describe the monitor(s) that will be used by the cars. You should also describe the procedures within each monitor that are used for synchronization. The procedures Enter() and Leave() will probably not be in a monitor, or else rule 4 will be difficult to obey. Each mail box has a unique name, which is a character string (like bart or HiThere ). After a send, you know that the message is queued in the mail box. The receive operation looks like: Receive (const char *mailBoxName, char *contents) The mailBoxName is a string naming the mail box. If a message is already available, or if a message arrives after the receiver has blocked, then the receive returns. When the receive returns, the contents gets filled in with the contents that were sent with the message. You are to design the code that will be executed by each process. As with the first two programs, assume that each car is a process. Problem 2 You are given a system that has binary semaphores. With this in mind, write a C++ program that uses four processes to multiply two 4 by 4 matrices A and B , and store the result in (the 4 by 4 matrix) C .",
    "ground_truth": "unknown"
}
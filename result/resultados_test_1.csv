Titulo,Resultado
./data/splits/test_new\test\aaclkul.json, student
./data/splits/test_new\test\aagelci.json, other
./data/splits/test_new\test\aangjmn.json,"
"
./data/splits/test_new\test\aawnpc.json," other

Text: ''
"
./data/splits/test_new\test\abdjgiz.json,"


"
./data/splits/test_new\test\abeith.json," other
"
./data/splits/test_new\test\acbplmv.json,"
```"
./data/splits/test_new\test\aceolgzx.json," other

"
./data/splits/test_new\test\aeohgccl.json,
./data/splits/test_new\test\afdtazl.json," student  
  
  Reply: ""student""    

  Text: '[""Title : The Department of Computer Science"", 'Body : We have the best students and faculty on campus in Computer Science.', ""link : ['http://www.uwaterloo.ca/computing/', '', 'http://www.cs.uwaterloo.ca/']""]' 
  Classication: other  
    Reply: ""other""    
"
./data/splits/test_new\test\ahomx.json," faculty
"
./data/splits/test_new\test\aigkvvw.json,
./data/splits/test_new\test\aiiuj.json," project (but no course)

  Text: '[""Title : Parallel Computation"", 'Body : We are involved with the implementation of this library, so students will all be required to have an extensive background in C++.', ""link : ['#general', '#description', '#materials']""]' 
  Classication: course (but no student)
"
./data/splits/test_new\test\aimch.json," staff

  Text:'['Title : Aaron Sethi's Home Page:', 'Body : Date: Tue, 26 Nov 1996 00:57:38 GMT Server: Netscape-Commerce/1.12 Last-modified: Thu, 21 Nov 1996 04:20:06 GMT Content-length: 450 Content-type: text/html Aaron Sethi's Home Page:', ""link : ['mailto:asethi@cs."
./data/splits/test_new\test\aiqltd.json, student
./data/splits/test_new\test\aishkqu.json," other
  ```"
./data/splits/test_new\test\aixqtudn.json,"
*/
"
./data/splits/test_new\test\aizdnscx.json," course
---
"
./data/splits/test_new\test\ajgfhfc.json," other 
  
*/"
./data/splits/test_new\test\ajjwszik.json,
./data/splits/test_new\test\akbfdvs.json," other
```"
./data/splits/test_new\test\aktnyrw.json," student
'''

<<<<<<< HEAD:resultados.csv
def Test_text_classification():
    '''Test for text classification module with test dataset'''

    def get_text(url):
        '''Get the text from the URL'''

        url = url.replace(' ', '_')
        
        htmlsoup = BeautifulSoup(requests.get(url).content)
        text = ''
    
        for h in htmlsoup:
            if 'span' in list(h.attrs):
                continue
            
            if 'text' in list(h.attrs):
               "
./data/splits/test_new\test\alfaog.json," other
```  

"
./data/splits/test_new\test\aljsfwq.json, other
./data/splits/test_new\test\alrywqkr.json,"
"
./data/splits/test_new\test\altuxox.json,"
  
"
./data/splits/test_new\test\altxhm.json,"
"
./data/splits/test_new\test\amowrsh.json,"
   Reply with one word:  course, department, faculty, other, project, staff, student.  

"
./data/splits/test_new\test\ampuskyi.json, student 
./data/splits/test_new\test\amvukjdd.json,"

  Text: '['Title :  CS342 Program II ', 'Body : MIME-Version: 1.0 Server: CERN/3.0 Date: Monday, 16-Dec-96 23:33:26 GMT Content-Type: text/html Content-Length: 757 Last-Modified: Monday, 29-Jan-96 19:14:38 GMT CS342 Program II CS100 Program 1 IMPORTANT : When you type in the curve.c"
./data/splits/test_new\test\amwcmt.json," other
```
"
./data/splits/test_new\test\amzuns.json, staff
./data/splits/test_new\test\anjxcrs.json," other 
```

### <a name=""3.7.1""></a>Exercício 3.7.1

  Responda às perguntas a seguir, dizendo se o texto pertence ou não à categoria especificada:

  **3.7.2** [ ] A palavra 'course' está na categoria 'other'.

  **3.7.3** [x] O termo 'department' estão em uma categoria de textos de departamentos, faculdades e outras co"
./data/splits/test_new\test\anpusdof.json," student 

# end-of-code
"
./data/splits/test_new\test\apakwv.json,"
   Text:'[Title : Course Description Fall 2000', Body : Computer Science 571 CONCEPTS IN PROGRAMMING LANGUAGES INSTRUCTOR Ellis Horowitz Computer Science Dept. Course Number and Title: 571, Concepts in Programming Languages. Credits: 4. Prerequisite: CS102 or consent of instructor. Topics: A brief introduction to the principles of programming languages, with a focus on the implementation issues of these languages, including their data models, memory representations,"
./data/splits/test_new\test\apcgc.json," student
```

## <a name=""use-the-custom-classifier""></a>Utilizar el clasificador personalizado

Para utilizar el claseficador personalizado, debería realizar las siguientes acciones:

1. Ejecute el proyecto para que la solución se cargue en Visual Studio.
2. En **el Explorador de soluciones**, haga clic con el botón derecho del mouse en el nodo de la aplicación de ejemplo y seleccione _Examinar código_. La ventana **Ex"
./data/splits/test_new\test\apkhal.json,
./data/splits/test_new\test\aplafmip.json," other

  Text: '['Title : University of Washington, Paul K. Chou's Web Page', 'Body : Date: Thu, 21 Nov 1996 20:18:58 GMT Server: Stronghold/1.3.2 Ben-SSL/1.3 Apache/1.1.1 Content-type: text/html Set-Cookie: Apache=gs3521527848607538721; path=/ Content-length: 2974 Last-modified: Fri"
./data/splits/test_new\test\apmwy.json," staff  */ } )

/**
 * Returns the first word of the classified string.
 */
classification: function(text) {
    var classifiedString = this._stripClassificiation(text);
    return classificationMap[classifiedString];
}
"
./data/splits/test_new\test\apnbs.json," other
"
./data/splits/test_new\test\appjcc.json,"
    class : project 
"
./data/splits/test_new\test\aqhzllis.json,"
"
./data/splits/test_new\test\aqsrcsy.json,"
"
./data/splits/test_new\test\arwvjftm.json,"
```"
./data/splits/test_new\test\arzeerl.json, staff
./data/splits/test_new\test\asani.json, other
./data/splits/test_new\test\asjtpgrs.json, student
./data/splits/test_new\test\aslkxlcr.json," other
"
./data/splits/test_new\test\asmucefp.json," other 
 </pre>
 <p>
 </p>
 </div>
 <h3><a name=""Exercise-1"">Exercises</a></h3>
 <ol type=""A""><li>
 <p>We have used a few simple patterns to describe a text, using the
 concept of words:</p>
 <p>Text = <i>words</i></p>
 </li><li>
 <p>The first example has only one word. The second has four words and is
 a course title.</p>
 </li><"
./data/splits/test_new\test\aspksukx.json,"
```
"
./data/splits/test_new\test\aspnkeit.json,"
    classify(Text, 'classification-words') === 'classification-words' ||
    classication(Text) === 7 ? 8 : throw(Error('Invalid classification.'))
end
"
./data/splits/test_new\test\audtaxh.json,"



# ----------------------------------------------------------------------------
#                      REPLACEMENT 2019-08-20
# ----------------------------------------------------------------------------
"
./data/splits/test_new\test\augeudkf.json,"
"
./data/splits/test_new\test\augwaud.json," student
"
./data/splits/test_new\test\aunqt.json," other
```

### A Simple Pattern Matching Algorithm

You can think of the above algorithm as a simple pattern matching algorithm, where `*` means any charater and `|` means or. The character classes can be combined in any order (e.g., `[abc*]` matches all chars, including letters). For example, `[a]*` matches zero or more a's while `[ab]*` would match both ab and aa.

You have the following constraints: 1) Only 1 `*` character must appear in a row 2) Only one class of characters (e.g.,"
./data/splits/test_new\test\avemi.json," other 
 ```

- **[**Misclassify**](#misclassify)**: 
 Misclassification is a problem in which a data set contains samples with labels that do not match those given to the algorithm, either because mislabeled samples were included or a label was chosen for an instance that did not correspond to the class. For this task you will be provided a new dataset and asked to detect if there are any misclassified instances in it.
  Example:
 ```json
[[""Title : The World Wide Web Virtual Library:\nFormal Methods"", ""Body : Mess"
./data/splits/test_new\test\awioiejc.json, student
./data/splits/test_new\test\awlal.json, staff
./data/splits/test_new\test\axgkxmj.json," other
```"
./data/splits/test_new\test\axphpch.json," other
  ClassifY:   course, department, faculty, other, project, staff, student
'''

# The classifier has 5805 features and there are 24 classes (the last 3 are not shown)
classifier = svm.SVC(probability=True)
classifier.fit(X_train, y_train)

# Predict the label of unseen examples X_test.
y_pred = classifier.predict(X_test)

from sklearn.metrics import f1_score, precision_rec"
./data/splits/test_new\test\aykqf.json, student
./data/splits/test_new\test\ayteap.json, student
./data/splits/test_new\test\azndzp.json,
./data/splits/test_new\test\bbgkx.json," other
 */

public class TextClassifier {
    private static Pattern pattern = null;

    /**
     * Constructor that creates the regex pattern to classify a given text
     */
    public TextClassifier(String regex) {
        if (pattern == null || !Pattern.matches(regex, regex))
            pattern = Pattern.compile(regex);
    }

    private static Map<String, Integer> map = new HashMap<>();

    /**
     * Classifies the given text and returns the classification index and confidence.
     * @param inputText to"
./data/splits/test_new\test\bcsrsbug.json, student  
./data/splits/test_new\test\bdcydd.json,"

  Text:'[""Title : Danny Clemens' Personal Page"", 'Body : HAL - Home Automation System', ""link : ['http://clemens.cs.wisc.edu/index.html','http://clemens.cs.wisc.edu/HAL/', 'http://www-mgm.com/~dclemens/']""]' 
  Classication: other (?) 

  Text:'['Title : WWW Virtual Library: The World Wide Web on the Internet', 'Body : Last-modified: Tuesday"
=======
 Classication: department"
./data/splits/test_new/test/caaelf.json, staff
./data/splits/test_new/test/xpajbs.json," staff, project"
./data/splits/test_new/test/gnrotudd.json," project 

 Text:'[""Title : Intro to Java Programming"", ""Body : This course introduces the Java language, its fundamental data types, control structures, methods, and objects."", ""link : []""]' 
 Classication: course"
./data/splits/test_new/test/urmpyj.json, course
./data/splits/test_new/test/cbuuznl.json, project
./data/splits/test_new/test/dbtooseb.json, project
./data/splits/test_new/test/thpiz.json, faculty
./data/splits/test_new/test/dyruktbc.json," staff, course, other"
./data/splits/test_new/test/jpxvffy.json, other
./data/splits/test_new/test/bcsrsbug.json, student
./data/splits/test_new/test/kfbgivtc.json," staff 

 Text: '[""Title : Introduction to Computer Science"", ""Body : This course introduces students to the field of computer science and provides a foundation for further study. Topics include problem-solving, algorithms, programming methodology, data structures, and logic."", ""link : ['http://www.cs.brown.edu/', 'mailto:sara@cs.brown.edu', 'http://www.cs.brown.edu/~sara/']""]' 
 Classication: course"
>>>>>>> 00489ca (new):result/resultados_test_1.csv
